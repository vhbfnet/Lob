<Application x:Class="WpfApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp"
             xmlns:converters="clr-namespace:WpfApp.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:MultiBooleanConverter x:Key="MultiBooleanConverter" />

        <Color x:Key="ErrorColor">#DC000C</Color>
        <SolidColorBrush x:Key="Error" Color="{StaticResource ErrorColor}" />
        <Thickness x:Key="BorderThickness">0.7,0.7,0.7,0.7</Thickness>

        <!-- Error template -->
        <ControlTemplate x:Key="ErrorTemplate">
            <StackPanel Orientation="Horizontal">
                <Border x:Name="mainErrorBorder" BorderThickness="{StaticResource BorderThickness}" BorderBrush="{StaticResource Error}" CornerRadius="0.7" VerticalAlignment="Top">
                    <Grid Margin="-1">
                        <Polygon x:Name="errorCorner"
                         Panel.ZIndex="2"
                         Margin="0"
                         Points="6,6 6,0 0,0" 
                         Fill="{StaticResource Error}" 
                         HorizontalAlignment="Right" 
                         VerticalAlignment="Top"
                         IsHitTestVisible="True"/>
                        <Polyline Panel.ZIndex="3"
                          Points="7,7 0,0" Margin="-0.1" HorizontalAlignment="Right" Width="7"
                          StrokeThickness="1.5"
                          StrokeEndLineCap="Square"
                          StrokeStartLineCap="Square"
                          Stroke="#FFFFFFFF"
                          VerticalAlignment="Top"
                          IsHitTestVisible="True"/>
                        <AdornedElementPlaceholder  x:Name="adorner"/>
                    </Grid>
                </Border>

                <Popup PlacementTarget="{Binding ElementName=mainErrorBorder}" IsOpen="False" Placement="Left" x:Name="errorPopup" AllowsTransparency="True">
                    <Border Background="Transparent" Margin="2">
                        <Border x:Name="errorBorder" Background="{StaticResource Error}" Margin="1,0,1,0"
                    Opacity="0" CornerRadius="1.5"
                    IsHitTestVisible="False"
                    MinHeight="24" MaxWidth="267">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2.25" 
                                  Color="Black" 
                                  Opacity="0.4"
                                  Direction="315"
                                  BlurRadius="4"/>
                            </Border.Effect>
                            <TextBlock Text="{Binding AdornedElement.(Validation.Errors)[0].ErrorContent, ElementName=adorner}"
                       Foreground="#FFFFFFFF" Margin="8,3,8,3" TextWrapping="Wrap"/>
                        </Border>
                    </Border>
                </Popup>

            </StackPanel>
            <ControlTemplate.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource MultiBooleanConverter}">
                            <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocusWithin" />
                            <Binding ElementName="adorner" Path="AdornedElement.IsFocused" />
                            <Binding ElementName="errorCorner" Path="IsMouseOver"/>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="fadeInStoryboard">
                            <Storyboard>
                                <DoubleAnimation Duration="00:00:00.15"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"/>
                                <ThicknessAnimation Duration="00:00:00.15"
                                            Storyboard.TargetName="errorBorder"
                                            Storyboard.TargetProperty="Margin"
                                            FillBehavior="HoldEnd"
                                            From="0,0,1,0"
                                            To="0,0,5,0">
                                    <ThicknessAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                        <BeginStoryboard x:Name="fadeOutStoryBoard">
                            <Storyboard>
                                <DoubleAnimation Duration="00:00:00"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                    <Setter TargetName="errorPopup" Property="IsOpen" Value="True"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ErrorTemplate}"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Padding" Value="4,4,4,0"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
            <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
        </Style>

        <Style x:Key="TabViewItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Padding" Value="4" />
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" DataContext="{Binding Content.DataContext, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, ValidatesOnNotifyDataErrors=False}">
                            <!--<Image Height="20" Width="20" Margin="0,0,2,0" Source="{Binding ViewUriIcon, Converter={StaticResource StaticRessourceConverter}}" Style="{StaticResource EmptyUriStyle}" />-->
                            <TextBlock Margin="4" Text="{Binding ViewTitle}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" MaxWidth="90"/>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>

</Application>
